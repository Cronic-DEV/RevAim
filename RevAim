local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/Cronic-DEV/uiloader/main/uiloader')))()

local Window = OrionLib:MakeWindow({
    Name = "RevAim",
    HidePremium = true,
    SaveConfig = true,
    ConfigFolder = "OrionLibTest"
})

local Tab = Window:MakeTab({
    Name = "MAIN",
    Icon = "rbxassetid://18323524372",
    PremiumOnly = false
})

local Section = Tab:AddSection({
    Name = "MAIN"
})

Tab:AddButton({
    Name = "LOCK",
    Callback = function()
        -- Original link : https://github.com/Stefanuk12/ROBLOX/blob/master/Games/Da%20Hood/SilentAimAimLock.lua
        -- reuploaded so it will be still alive if removed
        getgenv().SilentAim = true -- true or false
        getgenv().AimLock = true -- true or false
        getgenv().Prediction = 0.165 -- Prediction of Silent Aim and AimLock
        getgenv().AimLockKeybind = Enum.KeyCode.Q -- Keybind for AIMLOCK (NOT SILENT AIM)

        -- // Dependencies
        local Aiming = loadstring(game:HttpGet("https://raw.githubusercontent.com/Cronic-DEV/lock/main/lock"))()
        Aiming.TeamCheck(false)

        -- // Services
        local Workspace = game:GetService("Workspace")
        local Players = game:GetService("Players")
        local RunService = game:GetService("RunService")
        local UserInputService = game:GetService("UserInputService")

        -- // Vars
        local LocalPlayer = Players.LocalPlayer
        local Mouse = LocalPlayer:GetMouse()
        local CurrentCamera = Workspace.CurrentCamera

        local DaHoodSettings = {
            SilentAim = getgenv().SilentAim,
            AimLock = getgenv().AimLock,
            Prediction = getgenv().Prediction,
            AimLockKeybind = Enum.KeyCode.Q
        }
        getgenv().DaHoodSettings = DaHoodSettings

        -- // Toggle state
        local AimLockToggled = false
        local CurrentTarget = nil

        -- // Toggle function
        local function ToggleAimLock()
            AimLockToggled = not AimLockToggled
            if not AimLockToggled then
                CurrentTarget = nil
            end
        end

        -- // Listen for key press
        UserInputService.InputBegan:Connect(function(input)
            if input.KeyCode == DaHoodSettings.AimLockKeybind then
                ToggleAimLock()
            end
        end)

        -- // Overwrite to account downed
        function Aiming.Check()
            -- // Check A
            if not (Aiming.Enabled == true and Aiming.Selected ~= LocalPlayer and Aiming.SelectedPart ~= nil) then
                return false
            end

            -- // Check if downed
            local Character = Aiming.Character(Aiming.Selected)
            local KOd = Character:WaitForChild("BodyEffects")["K.O"].Value
            local Grabbed = Character:FindFirstChild("GRABBING_CONSTRAINT") ~= nil

            -- // Check B
            if (KOd or Grabbed) then
                return false
            end

            -- //
            return true
        end

        -- // Hook
        local __index
        __index = hookmetamethod(game, "__index", function(t, k)
            -- // Check if it trying to get our mouse's hit or target and see if we can use it
            if (t:IsA("Mouse") and (k == "Hit" or k == "Target") and Aiming.Check()) then
                -- // Vars
                local SelectedPart = Aiming.SelectedPart

                -- // Hit/Target
                if (DaHoodSettings.SilentAim and (k == "Hit" or k == "Target")) then
                    -- // Hit to account prediction
                    local Hit = SelectedPart.CFrame + (SelectedPart.Velocity * DaHoodSettings.Prediction)

                    -- // Return modded val
                    return (k == "Hit" and Hit or SelectedPart)
                end
            end

            -- // Return
            return __index(t, k)
        end)

        -- // Aimlock
        RunService:BindToRenderStep("AimLock", 0, function()
            if (DaHoodSettings.AimLock and AimLockToggled) then
                -- // If no current target, set it
                if not CurrentTarget then
                    if Aiming.Check() then
                        CurrentTarget = Aiming.SelectedPart
                    else
                        return
                    end
                end

                -- // Hit to account prediction
                local Hit = CurrentTarget.CFrame + (CurrentTarget.Velocity * DaHoodSettings.Prediction)

                -- // Set the camera to face towards the Hit
                CurrentCamera.CFrame = CFrame.lookAt(CurrentCamera.CFrame.Position, Hit.Position)
            end
        end)
    end
})

Tab:AddButton({
    Name = "ANTI-LOCK",
    Callback = function()
        getgenv().Sky = true --disable or enable the antilock
        getgenv().SkyAmount = 90 --how far it should be

        game:GetService("RunService").Heartbeat:Connect(function()
            if getgenv().Sky ~= false then
                local vel = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity
                game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, getgenv().SkyAmount, 0)
                game:GetService("RunService").RenderStepped:Wait()
                game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = vel
            end
        end)
    end
})

local CreditsTab = Window:MakeTab({
    Name = "CREDITS",
    Icon = "rbxassetid://18323645153",
    PremiumOnly = false
})

CreditsTab:AddButton({
    Name = "SILENT AIM [Q], ESP [T], MACRO [C]",
    Callback = function()
        getgenv().Target = {
            ["Key"] = Enum.KeyCode.Q,
            ["CamlockPred"] = 0.127,
            ["TargetPred"] = 0.127,
            ["Parts"] = "HumanoidRootPart",
            ["Smoothness"] = 0.25,
            ["Shake"] = 0, 
            ["JumpOffset"] = -0.17,
            ["JumpCheck"] = false
        }
        getgenv().Memory = {
            ["MemSpoofer"] = true,
            ["Start"] = 1137,
            ["End"] = 1564,
        }

        getgenv().KOcheck = {
            ["KoTarget"] = true,
            ["KoCam"] = true,
            ["KoCheck"] = true,
            ["Resolver"] = Enum.KeyCode.G,
        }

        getgenv().Spin360 = {
            ["Enabled"] = false,
            ["RotationSpeed"] = 2500, 
            ["Keybind"] = Enum.KeyCode.V,
        }

        getgenv().FloodsCframe = {
            ["Enabled"] = true,
            ["Toggle"] = "C"
        }

        getgenv().Ware = {
            ["Texture"] = {
                ["Enabled"] = false,
                ["Material"] = Enum.Material.Brick,
                ["Color"] = Color3.fromRGB(255, 255, 255)
            },
            ["Options"] = {
                ["AutoLowGfx"] = true,
                ["MuteBoomBox"] = true
            }
        }

        getgenv().Floodware = {
            Esp = {
                ["Enabled"] = (true), 
                ["UseEspKeybind"] = (true),
                ["EspKey"] = ("t"), 
                ["HoldMode"] = (false), 

                ["Name"] = {["Enabled"] = false, ["OutLine"] = true, ["Color"] = Color3.fromRGB(255, 255, 255)}, 
                ["Box"] = {["Enabled"] = true, ["OutLine"] = true, ["Color"] = Color3.fromRGB(255, 255, 255)}, 
                ["HealthBar"] = {["Enabled"] = true, ["OutLine"] = true, ["Color"] = Color3.fromRGB(0, 255, 0)}, 
                ["HealthText"] = {["Enabled"] = true, ["OutLine"] = true, ["Color"] = Color3.fromRGB(0, 255, 0)}, 
                ["Distance"] = {["Enabled"] = false, ["OutLine"] = true, ["Color"] = Color3.fromRGB(255, 255, 255)} 
            }
        }

        if not LPH_OBFUSCATED then
            LPH_JIT_MAX = function(...)
                return (...)
            end
            LPH_NO_VIRTUALIZE = function(...)
                return (...)
            end
        end

        LPH_JIT_MAX(function()
            local Floodware = getgenv().Floodware
            local Script = {Functions = {}, EspPlayers = {}}

            local Players, Client, Mouse, RS, Camera, GuiS =
                game:GetService("Players"),
                game:GetService("Players").LocalPlayer,
                game:GetService("Players").LocalPlayer:GetMouse(),
                game:GetService("RunService"),
                game:GetService("Workspace").CurrentCamera,
                game:GetService("GuiService")

            Script.Functions.NewDrawing = function(Properties)
                local nD = Drawing.new(Properties.Type)
                Properties.Type = nil
                for i, v in next, Properties do
                    nD[i] = v
                end
                return nD
            end

            Script.Functions.WTS = function(Object)
                local ObjectVector = Camera:WorldToViewportPoint(Object.Position)
                return Vector2.new(ObjectVector.X, ObjectVector.Y), ObjectVector.Z
            end

            Script.Functions.AddPlayer = function(Player)
                Script.EspPlayers[Player] = {InGame = false}

                Player.CharacterAdded:Connect(function()
                    Script.EspPlayers[Player].InGame = true

                    Player.CharacterRemoving:Connect(function()
                        Script.EspPlayers[Player].InGame = false
                    end)
                end)
            end

            Players.PlayerAdded:Connect(Script.Functions.AddPlayer)
            Players.PlayerRemoving:Connect(function(Player)
                if Script.EspPlayers[Player] then
                    for i, v in next, Script.EspPlayers[Player] do
                        if type(v) == "table" and v.Remove then
                            v:Remove()
                        end
                    end
                    Script.EspPlayers[Player] = nil
                end
            end)

            for i, v in next, Players:GetPlayers() do
                if v ~= Client then
                    Script.Functions.AddPlayer(v)
                end
            end

            RS.RenderStepped:Connect(function()
                if not Floodware.Esp.Enabled then
                    for i, v in next, Script.EspPlayers do
                        if type(v) == "table" then
                            for i2, v2 in next, v do
                                if v2.Visible ~= false then
                                    v2.Visible = false
                                end
                            end
                        end
                    end
                else
                    for i, v in next, Script.EspPlayers do
                        if v.InGame then
                            local Character = v.Character or v.CharacterAdded:Wait()
                            local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
                            local Humanoid = Character:WaitForChild("Humanoid")

                            local RootPos, OnScreen = Script.Functions.WTS(HumanoidRootPart)
                            local Distance = (Client.Character.HumanoidRootPart.Position - HumanoidRootPart.Position).Magnitude

                            if Floodware.Esp.Name.Enabled then
                                v.Name.Visible = OnScreen
                                v.Name.Position = RootPos + Vector2.new(0, -25)
                                v.Name.Outline = Floodware.Esp.Name.OutLine
                                v.Name.Color = Floodware.Esp.Name.Color
                                v.Name.Text = i.Name
                            end

                            if Floodware.Esp.Box.Enabled then
                                v.Box.Visible = OnScreen
                                v.Box.Position = RootPos
                                v.Box.Size = Vector2.new(4, HumanoidRootPart.Size.Y)
                                v.Box.Color = Floodware.Esp.Box.Color
                                v.Box.Outline = Floodware.Esp.Box.OutLine
                            end

                            if Floodware.Esp.HealthBar.Enabled then
                                v.HealthBar.Visible = OnScreen
                                v.HealthBar.Position = RootPos + Vector2.new(-7, 0)
                                v.HealthBar.Size = Vector2.new(2, Humanoid.Health / Humanoid.MaxHealth * HumanoidRootPart.Size.Y)
                                v.HealthBar.Color = Floodware.Esp.HealthBar.Color
                                v.HealthBar.Outline = Floodware.Esp.HealthBar.OutLine
                            end

                            if Floodware.Esp.HealthText.Enabled then
                                v.HealthText.Visible = OnScreen
                                v.HealthText.Position = RootPos + Vector2.new(0, 0)
                                v.HealthText.Text = string.format("%d / %d", Humanoid.Health, Humanoid.MaxHealth)
                                v.HealthText.Color = Floodware.Esp.HealthText.Color
                                v.HealthText.Outline = Floodware.Esp.HealthText.OutLine
                            end

                            if Floodware.Esp.Distance.Enabled then
                                v.Distance.Visible = OnScreen
                                v.Distance.Position = RootPos + Vector2.new(0, 10)
                                v.Distance.Text = string.format("%d", Distance)
                                v.Distance.Color = Floodware.Esp.Distance.Color
                                v.Distance.Outline = Floodware.Esp.Distance.OutLine
                            end
                        end
                    end
                end
            end)
        end)
    end
})

OrionLib:Init()
